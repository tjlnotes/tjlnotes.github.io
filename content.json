{"meta":{"title":"Tjl's notes","subtitle":null,"description":null,"author":"Tjl","url":"https://tjlnotes.github.io"},"pages":[{"title":"Tagcloud","date":"2014-12-22T04:39:04.000Z","updated":"2017-01-09T06:02:54.747Z","comments":true,"path":"tags/index.html","permalink":"https://tjlnotes.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello blog --- 搭建自己的博客","slug":"Hello-开始自己的博客","date":"2017-01-04T07:27:35.000Z","updated":"2017-01-09T05:59:48.141Z","comments":true,"path":"2017/01/04/Hello-开始自己的博客/","link":"","permalink":"https://tjlnotes.github.io/2017/01/04/Hello-开始自己的博客/","excerpt":"","text":"博客 作为web2.0的重要产物，是个人对外展示的快速平台，而博客也可以作为对自己生活、学习的记录。俗话说，“好记性不如烂笔头”，笔记对于程序开发这一日新月异、更迭迅速的行业来说更是显得尤为重要，好的笔记习惯不仅可以帮助我们及时review、整理开发过程中学到的东西，还能通过它与他人交流开发中获得的经验、踩过的坑，帮助自己发现错误与不足，及时改进、更新。下面就让我们用hexo+github搭建我们自己的博客。 简介github GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub。——百度百科 Hexo A fast, simple &amp; powerful blog framework, powered by Node.js. ——Hexo官方文档 Markdown Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。 —— 维基百科 Markdown使用语法规则请阅读：Markdown语法说明文档好用的在线Markdown文本编辑器：马克飞象 环境配置ubuntu下环境配置安装nvm第一种方式，直接使用curl安装：使用快捷键Ctrl + Alt + T打开命令行工具，输入命令：1$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.4/install.sh | bash 第二种方式：从 github clone nvm 到本地, 这里假设大家都使用 ~/git 目录存放 git 项目:12$ cd ~/git$ git clone https://github.com/creationix/nvm.git 配置终端启动时自动执行 source ~/git/nvm/nvm.sh,在 ~/.bashrc, ~/.bash_profile, ~/.profile, 或者 ~/.zshrc 文件添加以下命令:1source ~/git/nvm/nvm.sh 重新打开你的终端, 输入 nvm1234567891011121314151617181920212223242526272829$ nvmNode Version ManagerUsage: nvm help Show this message nvm --version Print out the latest released version of nvm nvm install [-s] &lt;version&gt; Download and install a &lt;version&gt;, [-s] from source nvm uninstall &lt;version&gt; Uninstall a version nvm use &lt;version&gt; Modify PATH to use &lt;version&gt; nvm run &lt;version&gt; [&lt;args&gt;] Run &lt;version&gt; with &lt;args&gt; as arguments nvm current Display currently activated version nvm ls List installed versions nvm ls &lt;version&gt; List versions matching a given description nvm ls-remote List remote versions available for install nvm deactivate Undo effects of NVM on current shell nvm alias [&lt;pattern&gt;] Show all aliases beginning with &lt;pattern&gt; nvm alias &lt;name&gt; &lt;version&gt; Set an alias named &lt;name&gt; pointing to &lt;version&gt; nvm unalias &lt;name&gt; Deletes the alias named &lt;name&gt; nvm copy-packages &lt;version&gt; Install global NPM packages contained in &lt;version&gt; to current versionExample: nvm install v0.10.24 Install a specific version number nvm use 0.10 Use the latest available 0.10.x release nvm run 0.10.24 myApp.js Run myApp.js using node v0.10.24 nvm alias default 0.10.24 Set default node version on a shellNote: to remove, delete or uninstall nvm - just remove ~/.nvm, ~/.npm and ~/.bower folders 使用nvm安装node关闭并重新打开命令行工具，输入命令：1$ nvm install v4.4.4 等待安装完成，查看安装是否成功1$ node -v 显示版本号则安装成功 ####安装npm包管理器ubuntu下可以直接使用apt-get包管理器安装npm，需要注意命令权限和安装前先更新源。 打开命令行，更新apt-get,安装npm12$ sudo apt-get update$ sudo apt-get install npm 安装hexo使用npm全局安装hexo1$ npm install -g hexo 初始化hexo1$ hexo init ~/Documents/blog 注意：此处init后接此项目存放路径，此处我将项目存放在用户home的Documents文件夹下的blog中，可根据自己需要修改路径。 进入项目路径下，右键打开命令行工具。或者直接在命令行中键入1$ cd ~/Documents/blog 构建hexo1$ hexo generate 运行本地服务器查看项目1$ hexo server 此处命令可能报错，提示server命令无法找到，原因是在Hexo 3.0 后server被单独出来了，需要安装server，不用怕，只需要输入命令:1$ npm install hexo-server --save 安装成功，再次输入命令运行本地server，会看到如下提示：123$ hexo serverINFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 此时，打开浏览器，在网址栏键入localhost:4000就能看到初始化的博客页面了。 windows下环境配置安装node进入Nodejs中文网或Nodejs官网下载node安装包，下载完成后打开，直接点击下一步进行傻瓜式安装。 安装完毕，打开命令行窗口，使用-v命令查看是否安装成功1$ node -v 安装npm打开nodejs安装目录，在根目录文件夹空白处按下Shift + 鼠标右键打开右键菜单，找到“在此处打开命令窗口” 在命令窗口输入命令：12$ cd node_modules/npm$ node cli.js install npm -gf 安装完毕，使用-v查看是否安装成功1$ npm -v 安装git进入git官网下载客户端安装文件，下载完成后直接点击“下一步”安装。安装完成，打开命令行1$ git 查看是否安装成功12345678910111213141516171819202122232425262728293031323334353637383940414243C:\\Users\\Administrator&gt;git --versionusage: git [--version] [--help] [-C &lt;path&gt;] [-c name=value] [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path] [-p | --paginate | --no-pager] [--no-replace-objects] [--bare] [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;] &lt;command&gt; [&lt;args&gt;]These are common Git commands used in various situations:start a working area (see also: git help tutorial) clone Clone a repository into a new directory init Create an empty Git repository or reinitialize an existing onework on the current change (see also: git help everyday) add Add file contents to the index mv Move or rename a file, a directory, or a symlink reset Reset current HEAD to the specified state rm Remove files from the working tree and from the indexexamine the history and state (see also: git help revisions) bisect Use binary search to find the commit that introduced a bug grep Print lines matching a pattern log Show commit logs show Show various types of objects status Show the working tree statusgrow, mark and tweak your common history branch List, create, or delete branches checkout Switch branches or restore working tree files commit Record changes to the repository diff Show changes between commits, commit and working tree, etc merge Join two or more development histories together rebase Reapply commits on top of another base tip tag Create, list, delete or verify a tag object signed with GPGcollaborate (see also: git help workflows) fetch Download objects and refs from another repository pull Fetch from and integrate with another repository or a local branch push Update remote refs along with associated objects&apos;git help -a&apos; and &apos;git help -g&apos; list available subcommands and someconcept guides. See &apos;git help &lt;command&gt;&apos; or &apos;git help &lt;concept&gt;&apos;to read about a specific subcommand or concept. 安装hexo 全局安装hexo：打开命令行，输入： 1$ npm install -g hexo 初始化hexo项目 打开需要将hexo项目存放的目录，例如我存放在的D盘下的workspace文件夹。在此文件夹下创建一个新文件夹下，可取名为“blog”，进入blog文件夹，Shift + 鼠标右键在此处打开命令行窗口，输入指令：1$ hexo init 等待安装完成 安装项目依赖包 1$ npm install 构建页面并运行hexo本地服务，查看是否安装正确 12$ hexo clean$ hexo generate 等待构建完成后，运行本地服务1$ hexo server 出现以下提示则服务启动成功，可打开浏览器并输入localhost:4000查看原始博客页面123$ hexo serverINFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 注：由于在Hexo 3.0 后server被单独出来了，所以若server命令报错或无反应，可通过命令安装server模块：1$ npm install hexo-server --save 配置github并接通hexo 建立Repository创建github账号，并建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法 配置ssh使用git提交和下载代码时总共有两种协议，https和ssh。此处我是用的是ssh，也可根据个人偏好使用https。使用ssh协议时的配置如下： 2.1. 检查本机是否有ssh key设置 右键打开git bash1$ cd ~/.ssh 如果没有则提示：No such file or directory没有则进入~/.ssh路径下 2.2. 使用git bash生成新的ssh key12345678910$ cd ~ ----保证当前路径在&quot;~&quot;下$ ssh-keygen -t rsa -c &quot;xxxxxx@yy.com&quot; ----填写注册github时使用的邮箱地址Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/xxxx_000/.ssh/id_rsa): ----不填直接回车Enter passphrase (empty for no passphrase): #输入密码（可以为空）Enter same passphrase again: #再次确认密码（可以为空）Your identification has been saved in /c/Users/xxxx_000/.ssh/id_rsa. ----生成的密钥Your public key has been saved in /c/Users/xxxx_000/.ssh/id_rsa.pub. ----生成的公钥The key fingerprint is:e3:51:33:xx:xx:xx:xx:xxx:61:28:83:e2:81 xxxxxx@yy.com 本机已完成ssh key设置，其存放路径为：c:/Users/xxxx_000/.ssh/下。 2.3. 添加ssh key到github a. 登录GitHub系统；点击右上角账号头像的“▼”→Settings→SSH kyes→Add SSH key。 b. 进入c:/Users/xxxx_000/.ssh/目录下，打开id_rsa.pub文件，全选复制公钥内容。 c. Title自定义，将公钥粘贴到GitHub中Add an SSH key的key输入框，最后“Add Key”。 d. 测试ssh keys是否设置成功。 12$ ssh -T git@github.comHi tjlnotes! You&apos;ve successfully authenticated, but GitHub does not provide shell access. 配置hexo找到博客根目录下的_config.yml文件，用记事本打开，并将最后几行改成1234deploy: type: git repo: git@github.com:tjlnotes/tjlnotes.github.io.git branch: master 注意，repo后接自己的github仓库地址（在建立完仓库后可从个人的repository查看到）。如果使用的是ssh协议，此处填ssh地址，如果使用https协议此处就填https地址。 安装hexo-deployer-git模块此目录下打开命令行键入 1$ npm install hexo-deployer-git --save 重新构建页面并发布到github上 12345678$ hexo clean$ hexo generate$ hexo deployBranch master set up to track remote branch master from git@github.com:tjlnotes/tjlnotes.github.io.git.To github.com:tjlnotes/tjlnotes.github.io.git + cd219d1...d275f0d HEAD -&gt; master (forced update)INFO Deploy done: git 发布成功，就可以打开个人主页查看效果了http://yourgithubname.github.io 每次编辑博客后都由这三个命令进行构建和发布 参考 在Windows平台上安装Node.js及NPM模块管理 【看云】nvm，nodejs和npm安装使用 【简书】HEXO+Github,搭建属于自己的博客 【知乎】有哪些好看的 Hexo 主题？ 【百度经验】window下配置SSH连接GitHub、GitHub配置ssh key NexT主题使用文档","categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"https://tjlnotes.github.io/tags/博客/"},{"name":"Hexo","slug":"Hexo","permalink":"https://tjlnotes.github.io/tags/Hexo/"},{"name":"nvm","slug":"nvm","permalink":"https://tjlnotes.github.io/tags/nvm/"}]}]}